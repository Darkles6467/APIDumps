#pragma once

#include "BaseDeclarations.h"
#include "UObject.h"
#include "UObjectBaseUtility.h"
#include "UObjectBase.h"

struct UEdGraphPin : UObject
{
	char __padding[0x118L];
	FString& PinNameField() { return *GetNativePointerField<FString*>(this, "UEdGraphPin.PinName"); }
	FText& PinFriendlyNameField() { return *GetNativePointerField<FText*>(this, "UEdGraphPin.PinFriendlyName"); }
	FString& PinToolTipField() { return *GetNativePointerField<FString*>(this, "UEdGraphPin.PinToolTip"); }
	TEnumAsByte<enum EEdGraphPinDirection>& DirectionField() { return *GetNativePointerField<TEnumAsByte<enum EEdGraphPinDirection>*>(this, "UEdGraphPin.Direction"); }
	FEdGraphPinType& PinTypeField() { return *GetNativePointerField<FEdGraphPinType*>(this, "UEdGraphPin.PinType"); }
	FString& DefaultValueField() { return *GetNativePointerField<FString*>(this, "UEdGraphPin.DefaultValue"); }
	FString& AutogeneratedDefaultValueField() { return *GetNativePointerField<FString*>(this, "UEdGraphPin.AutogeneratedDefaultValue"); }
	FText& DefaultTextValueField() { return *GetNativePointerField<FText*>(this, "UEdGraphPin.DefaultTextValue"); }
	TArray<UEdGraphPin *>& LinkedToField() { return *GetNativePointerField<TArray<UEdGraphPin *>*>(this, "UEdGraphPin.LinkedTo"); }
	TArray<UEdGraphPin *>& SubPinsField() { return *GetNativePointerField<TArray<UEdGraphPin *>*>(this, "UEdGraphPin.SubPins"); }
	UEdGraphPin * ParentPinField() { return GetNativePointerField<UEdGraphPin *>(this, "UEdGraphPin.ParentPin"); }

	// Functions

	void BreakAllPinLinks() { NativeCall<void>(this, "UEdGraphPin.BreakAllPinLinks"); }
	void BreakLinkTo(UEdGraphPin * ToPin) { NativeCall<void, UEdGraphPin *>(this, "UEdGraphPin.BreakLinkTo", ToPin); }
	void MakeLinkTo(UEdGraphPin * ToPin) { NativeCall<void, UEdGraphPin *>(this, "UEdGraphPin.MakeLinkTo", ToPin); }
};

